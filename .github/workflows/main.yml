name: CI

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    lint:
        runs-on: ubuntu-latest
        name: 'Lint'
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.1'
                  coverage: pcov

            - name: Get composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: |
                  composer update --no-interaction --verbose
                  composer bin dev update --no-interaction --verbose

            - name: Check platform requirements
              run: composer check-platform-reqs --verbose

            - name: PHP-CS-Fixer
              run: composer fix -- --dry-run --verbose

            # - name: composer normalize
            #   run: composer normalize --dry-run --no-interaction --verbose

            # - name: test coverage
            #   run: |
            #       ./vendor/bin/phpunit --coverage-clover=coverage.xml --debug --verbose
            #       bash <(curl -s https://codecov.io/bash)
            #   env:
            #       CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

            # - name: Infection
            #   run: ./vendor/bin/infection --show-mutations --min-covered-msi=100 --no-progress --no-interaction --verbose
              # env:
              #     INFECTION_BADGE_API_KEY: ${{ secrets.INFECTION_BADGE_API_KEY }}

            # - name: Psalm
            #   run: ./vendor/bin/psalm --shepherd --no-progress

            # - name: PHPStan
            #   run: ./vendor/bin/phpstan --no-interaction --verbose
            #
            #   composer-require-checker
            #   composer-unused

    tests:
        runs-on: ubuntu-latest
        name: 'Test suite on PHP: ${{ matrix.php }}; Dependecies: ${{ matrix.dependency-version }}'
        strategy:
            matrix:
                php: ['8.0', '8.1', '8.2']
                dependency-version: ['prefer-lowest', 'prefer-stable']

        steps:
            - name: checkout code
              uses: actions/checkout@v3

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  coverage: none

            - name: Get composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                restore-keys: ${{ runner.os }}-composer-

            - name: Support prefer-lowest in PHP 8.2
              if: ${{ matrix.php == 8.2 && matrix.dependency-version == 'prefer-lowest' }}
              run: composer require carbon/carbon:"^2.62.1"

            - name: Install dependencies
              run: |
                  composer update --${{ matrix.dependency-version }} --no-interaction --verbose
                  composer bin dev update --no-interaction --verbose

            # - name: Support prefer-lowest in PHP 8.1
            #   if: ${{ matrix.php == 8.1 && matrix.dependency-version == 'prefer-lowest' }}
            #   run: composer require symfony/console:">=5.3.7" symfony/http-foundation:">=5.3.7" laravel/framework:">=8.62.0" nesbot/carbon:">=2.51.0" ramsey/collection:">=1.2.0" --prefer-lowest --with-all-dependencies --no-scripts

            - name: Check platform requirements
              run: composer check-platform-reqs --verbose

            - name: Run tests
              run: composer test
